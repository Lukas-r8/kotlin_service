# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  pull_request:
    branches: [ main ]

permissions:
  contents: read

env:
  IMAGE_NAME: helloworld
  DIGITAL_OCEAN_REGISTRY: lukas-registry

jobs:
  build-test-upload:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: 'Set up latest Zulu JDK 16'
        uses: actions/setup-java@v3
        with:
          java-version: '16'
          distribution: 'zulu'
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 7.3.3
          arguments: build check installBootDist --stacktrace
      - name: Checking out on repo
        uses: actions/checkout@v3
      - name: Verify downloaded JAR
        run: ls -la build/install/kotlin-service-hello-world-boot/lib/
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      - name: Build docker image.
        run: docker build . -f docker/service.dockerfile -t $IMAGE_NAME
      - name: push image to digitalocean
        run: |
              doctl registry login
              docker tag $IMAGE_NAME registry.digitalocean.com/$DIGITAL_OCEAN_REGISTRY/$IMAGE_NAME
              docker push registry.digitalocean.com/$DIGITAL_OCEAN_REGISTRY/$IMAGE_NAME

  deploy-kubernetes:
    needs: build-docker-image-and-upload
    runs-on: ubuntu-latest
    steps:
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      - name: Deploy image to kubernetes
        run: |
          doctl registry login
          doctl kubernetes apply -f kubernetes.yaml
