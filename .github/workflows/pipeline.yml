# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  pull_request:
    branches: [ main ]

permissions:
  contents: read

env:
  IMAGE_NAME: helloworld
  DIGITAL_OCEAN_REGISTRY: lukas-registry

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: 'Set up latest Oracle JDK 17'
        uses: oracle-actions/setup-java@v1
        with:
          website: oracle.com
          release: 17
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
#        with:
#          arguments: build
      - name: Build with gradle
        run: ./gradlew check installBootDist --stacktrace
      - uses: actions/upload-artifact@master
        with:
          name: applicationJar
          path: build/install/kotlin-service-hello-world-boot/lib/kotlin-service-hello-world-1.0-SNAPSHOT.jar

  upload:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checking out on repo
        uses: actions/checkout@v3
      - name: Downloading artifacts
        uses: actions/download-artifact@master
        with:
          name: applicationJar
          path: build/install/kotlin-service-hello-world-boot/lib/kotlin-service-hello-world-1.0-SNAPSHOT.jar
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      - name: Build docker image.
        run: docker build . -f docker/service.dockerfile -t $IMAGE_NAME
      - name: push image to digitalocean
        run: |
              doctl registry login
              docker tag $IMAGE_NAME registry.digitalocean.com/$DIGITAL_OCEAN_REGISTRY/$IMAGE_NAME
              docker push registry.digitalocean.com/$DIGITAL_OCEAN_REGISTRY/$IMAGE_NAME
